import { GoogleSheetsService } from '../lib/services/google-sheets'
import { config } from 'dotenv'
import { resolve } from 'path'

// .env.local„ÇíË™≠„ÅøËæº„Åø
config({ path: resolve(process.cwd(), '.env.local') })

const googleSheetsId = process.env.GOOGLE_SHEETS_ID!

async function checkDuplicateCards() {
  console.log('üîç DM25-RP1„ÅÆOR1/OR1„Ç´„Éº„Éâ„ÇíÁ¢∫Ë™ç‰∏≠...')
  
  try {
    const sheetsService = new GoogleSheetsService(googleSheetsId)
    
    // „Ç´„Éº„Éâ„Éû„Çπ„Çø„Éº„ÅÆÁ¢∫Ë™ç
    const allCards = await sheetsService.fetchCardData()
    
    // DM25-RP1„ÅÆOR1/OR1„Ç´„Éº„Éâ„ÇíÊé¢„Åô
    const or1Cards = allCards.filter(card => 
      card.pack_id === 'DM25-RP1' && card.card_number === 'OR1/OR1'
    )
    
    console.log(`\nDM25-RP1„ÅÆOR1/OR1„Ç´„Éº„ÉâÊï∞: ${or1Cards.length}`)
    
    if (or1Cards.length > 0) {
      console.log('\nË©≥Á¥∞:')
      or1Cards.forEach((card, index) => {
        console.log(`  ${index + 1}. ${card.name}`)
        console.log(`     „É¨„Ç¢„É™„ÉÜ„Ç£: ${card.rarity}`)
        console.log(`     Ë≤∑Âèñ‰æ°Ê†º: ${card.buyback_price}`)
        console.log(`     ÂèÇËÄÉ‰æ°Ê†º: ${card.reference_price || 'Êú™Ë®≠ÂÆö'}`)
      })
    }
    
    // DM25-RP1„ÅÆÂÖ®„Ç´„Éº„ÉâÊï∞
    const rp1Cards = allCards.filter(card => card.pack_id === 'DM25-RP1')
    console.log(`\nDM25-RP1„ÅÆÂÖ®„Ç´„Éº„ÉâÊï∞: ${rp1Cards.length}`)
    
    // OR„É¨„Ç¢„É™„ÉÜ„Ç£„ÅÆ„Ç´„Éº„Éâ„ÇíÁ¢∫Ë™ç
    const orCards = rp1Cards.filter(card => card.rarity === 'OR')
    console.log(`\nDM25-RP1„ÅÆOR„É¨„Ç¢„É™„ÉÜ„Ç£„Ç´„Éº„Éâ:`)
    orCards.forEach(card => {
      console.log(`  ${card.card_number}: ${card.name}`)
    })
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error)
  }
}

checkDuplicateCards()